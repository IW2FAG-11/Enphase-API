{
    "AC_Battery_Configuration": {
        "description": "Get, set or cancel an AC Battery’s (ACB) sleep mode.",
        "documentation": "Admin/Lib/ACB_Config.adoc",
        "methods": [
            "PUT",
            "GET",
            "DELETE"
        ],
        "name": "AC Battery (ACB) Configuration",
        "uri": "admin/lib/acb_config.json"
    },
    "Administer_Device_Conditions_and_Controls": {
        "description": "Send a Device Conditions and Controls (DCC) command, such as to clear a Ground Fault Interrupt (GFI).",
        "documentation": "Admin/Lib/Admin_DCC_Display.adoc",
        "methods": [
            "POST"
        ],
        "name": "Administer Device Conditions and Controls (DCC)",
        "uri": "admin/lib/admin_dcc_display.json"
    },
    "Administer_Power_Meter_Unit": {
        "description": "Add or read a Power Meter Unit (PMU).",
        "documentation": "Admin/Lib/Admin_PMU_Display.adoc",
        "methods": [
            "GET",
            "POST"
        ],
        "name": "Administer Power Meter Unit (PMU)",
        "uri": "admin/lib/admin_pmu_display.json"
    },
    "AgfProfileDetails": {
        "uri": "installer/agf/details.json"
    },
    "AgfProfileIndex": {
        "uri": "installer/agf/index.json?simplified=true"
    },
    "AgfProfileInverterStatus": {
        "uri": "installer/agf/inverters_status.json"
    },
    "AgfProfileSetProfile": {
        "uri": "installer/agf/set_profile.json"
    },
    "CellularConfig": {
        "uri": "admin/lib/network_display.json?cellular=1"
    },
    "Debug_Access": {
        "description": "Get or set the Enphase® De-Bug Access (DBA) tunnel state.",
        "documentation": "Admin/Lib/DBA.adoc",
        "methods": [
            "GET",
            "POST"
        ],
        "name": "De-Bug Access (DBA)",
        "uri": "admin/lib/dba.json"
    },
    "DhcpGetNewIp": {
        "uri": "admin/lib/network_display.json"
    },
    "DiagnosticNetworkCheck": {
        "uri": "admin/lib/network_display.json"
    },
    "EnchargeCancelSleepMode": {
        "uri": "ivp/ensemble/sleep"
    },
    "EnchargeGetSleepModeData": {
        "uri": "ivp/ensemble/sleep"
    },
    "EnchargeRelay": {
        "uri": "ivp/ensemble/relay"
    },
    "EnchargeSetSleepMode": {
        "uri": "ivp/ensemble/sleep"
    },
    "EnsembleAgfProfileStatus": {
        "uri": "ivp/ensemble/profile_status"
    },
    "EnsembleComm": {
        "uri": "ivp/ensemble/comm_check"
    },
    "EnsembleDelete": {
        "uri": "ivp/zb/provision"
    },
    "EnsembleInventory": {
        "uri": "ivp/ensemble/inventory"
    },
    "EnsemblePut": {
        "uri": "ivp/zb/provision"
    },
    "EthernetConfigGet": {
        "uri": "admin/lib/network_display.json"
    },
    "EthernetConfigPut": {
        "uri": "admin/lib/network_display.json"
    },
    "EventsGet": {
        "uri": "datatab/event_dt.rb"
    },
    "GetInfo": {
        "uri": "info.xml"
    },
    "GetTimezones": {
        "uri": "admin/lib/date_time_display.json?tzlist=1"
    },
    "Home": {
        "uri": "home.json"
    },
    "InternalMeterCurrentCTSettings": {
        "uri": "ivp/meters/cts"
    },
    "InternalMeterInfo": {
        "uri": "ivp/meters"
    },
    "InternalMeterReadings": {
        "uri": "ivp/meters/readings"
    },
    "Inventory": {
        "uri": "inventory.json?deleted=1"
    },
    "InverterComm": {
        "uri": "installer/pcu_comm_check"
    },
    "InverterDelete": {
        "uri": "prov"
    },
    "InverterProduction": {
        "uri": "api/v1/production/inverters"
    },
    "InverterPut": {
        "uri": "prov"
    },
    "NewScanGet": {
        "uri": "ivp/peb/newscan"
    },
    "NewScanPD": {
        "uri": "ivp/peb/newscan"
    },
    "PMUPost": {
        "uri": "admin/lib/admin_pmu_display.json"
    },
    "PowerForcedModeGet": {
        "uri": "ivp/mod/EID/mode/power"
    },
    "PowerForcedModePut": {
        "uri": "ivp/mod/EID/mode/power"
    },
    "Production": {
        "description": {
            "long": "A HTTP GET to `/production.json` can be used to get a JSON formatted object of the production data.",
            "short": "Obtain production data."
        },
        "documentation": "General/Production.adoc",
        "name": "Production",
        "request": {
            "examples": [
                {
                    "name": "Get Production Data"
                },
                {
                    "name": "Get Production Data (with each individual phase's details)",
                    "uri": "details=1"
                }
            ],
            "methods": [
                "GET"
            ],
            "query": [
                {
                    "description": "Specifies more detailed data should be provided. Currently this gives a further breakdown on each of the individual AC phases.",
                    "name": "details",
                    "optional": true,
                    "type": "Boolean",
                    "value": "Boolean (e.g. `0` or `1`)"
                }
            ],
            "uri": "production.json"
        },
        "response": {
            "map_description": {
                "consumption": "An object that contains the consumption details for the request.",
                "Device.activeCount": "How many of these devices are active.",
                "Device.apprntPwr": "The apparent power value. The combination of reactive and true power measurement in Volt-Amperes (VA). Only available with the `eim` device type.",
                "Device.measurementType": "What type of measurement this is reporting. `production` is the energy produced from the inverters. `net-consumption` is load with solar production included whereas `total-consumption` is the load only. Only available with the `eim` device type.",
                "Device.pwrFactor": "The power factor value. The ratio of the real power absorbed by the load to the apparent power flowing in the circuit. Only available with the `eim` device type.",
                "Device.reactPwr": "The reactive power value. The dissipated power resulting from inductive and capacitive loads measured in Volt-Amperes reactive (var). Only available with the `eim` device type.",
                "Device.readingTime": "The date and time in epoch format that the measurement was taken.",
                "Device.rmsCurrent": "The Root Mean Square current value. Only available with the `eim` device type.",
                "Device.rmsVoltage": "The Root Mean Square voltage value. Only available with the `eim` device type.",
                "Device.state": "The state the AC Battery device is currently in. Only available with the `acb` device type.",
                "Device.type": "Specifies what type of device this is a response from. In the format `DeviceType`.",
                "Device.vahLifetime": "The total Volt-Ampere hour this device has seen. Only available with the `eim` device type.",
                "Device.vahToday": "The total number of Volt-Ampere hours (vah) seen today. Only available with the `eim` device type.",
                "Device.varhLagLifetime": "The total lagging Volt-Ampere reactive hours (varh) this device has seen. Only available with the `eim` device type.",
                "Device.varhLagToday": "The total lagging Volt-Ampere reactive hours (varh) seen today. Only available with the `eim` device type.",
                "Device.varhLeadLifetime": "The total leading Volt-Ampere reactive hours (varh) this device has seen. Only available with the `eim` device type.",
                "Device.varhLeadToday": "The total leading Volt-Ampere reactive hours (varh) seen today. Only available with the `eim` device type.",
                "Device.whLastSevenDays": "The total number of watt-hours seen in the last 7 days. Only available with the `eim` device type.",
                "Device.whLifetime": "The total number of watt-hours (Wh) this device has seen.",
                "Device.whNow": "Unknown. Only available with the `acb` device type.",
                "Device.whToday": "The total number of watt-hours seen today. Only available with the `eim` device type.",
                "Device.wNow": "The number of watts currently being reported.",
                "production": "An object that contains the production details for the request.",
                "storage": "An object that contains the storage details for the request."
            },
            "map_object": {
                "consumption": "Device",
                "production": "Device",
                "storage": "Device"
            },
            "map_value": {
                "Device.type": [
                    {
                        "name": "DeviceType",
                        "values": [
                            {
                                "description": "IQ Inverter(s).",
                                "name": "inverters",
                                "type": "IQ Inverter"
                            },
                            {
                                "description": "The built-in meter on the Gateway (formerly \"Envoy\").",
                                "name": "eim",
                                "type": "Envoy Integrated Meter"
                            },
                            {
                                "description": "Encharge AC storage battery.",
                                "name": "acb",
                                "type": "AC Battery"
                            },
                            {
                                "description": "An external ZigBee Revenue Grade Meter (RGM) such as the RGM-MTR-01. This is also known as the General Electric (GE) i210+ meter.",
                                "name": "rgm?",
                                "type": "Revenue Grade Meter"
                            },
                            {
                                "description": "Another external meter?",
                                "name": "pmu?",
                                "type": "Power Meter"
                            }
                        ]
                    }
                ]
            }
        }
    },
    "RedeterminePhase": {
        "uri": "ivp/grest/local/gs/redeterminephase"
    },
    "ReportSettingsGet": {
        "uri": "ivp/peb/reportsettings"
    },
    "ReportSettingsPut": {
        "uri": "ivp/peb/reportsettings"
    },
    "SetTimezone": {
        "uri": "admin/lib/date_time_display.json"
    },
    "TariffSettingsGet": {
        "uri": "admin/lib/tariff.json"
    },
    "TariffSettingsPut": {
        "uri": "admin/lib/tariff.json"
    },
    "UpdateMeterConfig": {
        "uri": "ivp/meters/EID"
    },
    "UpdateMeterCurrentCTConfig": {
        "uri": "ivp/meters/cts/EID"
    },
    "WifiSettings": {
        "uri": "admin/lib/wireless_display.json"
    },
    "WifiSettingsJoin": {
        "uri": "admin/lib/wireless_display.json"
    }
}